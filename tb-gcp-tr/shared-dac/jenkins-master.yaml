---
### StorageClass ###
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: gold
provisioner: kubernetes.io/gce-pd
parameters:
  type: pd-ssd
  replication-type: regional-pd
volumeBindingMode: WaitForFirstConsumer
allowedTopologies: []
---
### Persistent volume claim ###
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-master-pv-claim
  namespace: cicd
spec:
  storageClassName: gold
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
---
### Jenkins Service ###
apiVersion: v1
kind: Service
metadata:
  name: jenkins-master-svc
  namespace: cicd
  annotations:
    cloud.google.com/load-balancer-type: "Internal"
  labels:
    app: jenkins-master
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
    - port: 50000
      targetPort: 50000
      protocol: TCP
      name: slave
  selector:
    app: jenkins-master
---
### Jenkins Deployment ###
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: jenkins-master
  name: jenkins-master
  namespace: cicd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins-master
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: jenkins-master
    spec:
      containers:
        - name: jenkins-master
          image: gcr.io/tranquility-base-images/tb-jenkins_latest:landingzone
          securityContext:
            privileged: true
            runAsUser: 0
          imagePullPolicy: "Always"
          volumeMounts:
            - mountPath: /var
              name: jenkins-home
              subPath: jenkins_home
            - name: docker-sock-volume
              mountPath: /var/run/docker.sock
            - name: google-cloud-key
              mountPath: /var/secrets/google
          env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /var/secrets/google/ec-service-account-config.json
          resources:
            requests:
              memory: "1024Mi"
              cpu: "1"
            limits:
              memory: "4096Mi"
              cpu: "2"
          ports:
            - name: http-port
              containerPort: 8080
            - name: jnlp-port
              containerPort: 50000
      volumes:
        - name: config-volume
          configMap:
            name: ec-config
        - name: google-cloud-key
          secret:
            secretName: ec-service-account
        - name: jenkins-home
          persistentVolumeClaim:
            claimName: jenkins-master-pv-claim
        - name: docker-sock-volume
          hostPath:
            path: /var/run/docker.sock
            type: File
---
### Private-ingressgateway for Jenkins ###
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: jenkins-gateway
  namespace: cicd
spec:
  selector:
    istio: private-ingressgateway  # use istio default controller
  servers:
    - port:
        number: 8080
        name: http
        protocol: HTTP
      hosts:
        - "*"
---
### Jenkins Virtual Service ###
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: jenkinsservice
  namespace: cicd
spec:
  hosts:
    - "*"
  gateways:
    - jenkins-gateway
  http:
    - route:
        - destination:
            host: jenkins-master
            port:
              number: 8080
      corsPolicy:
        allowOrigin:
          - "*"
        allowMethods:
          - POST
          - GET
          - OPTIONS
          - PUT
          - PATCH
          - DELETE
        allowHeaders:
          - "*"
